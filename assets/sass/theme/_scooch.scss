/*  Classes  on  outer  slideshow  wrapper:
    either  NONE  or  'fraction'  or  'fraction'  +  one  of  'fraction1'...'fraction10'.
        fraction  sets  box-sizing:  border-box,  so  that  padding  on  the  element  is  taken  out  ;
    either  NONE  or  'center'  or  'right'

*/
.m-scooch  {
    position: relative;
    overflow: hidden;
    -webkit-font-smoothing: antialiased;
    &.m-scooch-videos {
        position: relative;
        z-index: 9;
        margin: 0 -15px;
        @include transform-style(flat);
        .m-scooch-inner {
            position: relative;
            left: 50%;
            margin: 0 0 0 -430px;
        }
    }
    &.m-left { 
        text-align: left;
    }
    &.m-center {
        text-align: center;
    }
    &.m-fluid {
        .m-item {
            width: 100%;
        }
        .m-scooch-inner {
            * {
                box-sizing: border-box;
            }
        }
    }
    img  {
        -ms-interpolation-mode:  bicubic;  
    }
    .m-item {
        width: auto;
        -webkit-transform: translate(0);
        transform: translate(0);
        position: relative;
        &.caseVideo {
            opacity: 0.25;
            @include transition(all 0.3s ease-in-out);
            &.m-active {
                opacity: 1;
                @include transition(all 0.3s ease-in-out);
                &:hover {
                    cursor: pointer;
                    .playwrap {
                        opacity: 1;
                        @include transform(scale(0.75));
                        @include transition(all 0.3s $authenticMotion);
                    }
                }
            }
        }
    }
    .m-scooch-inner  {
        position:  relative;
        white-space:  nowrap;
        text-align:  center;
        /*  Removes  inline-block  gaps  due  to  whitespace  */
        font-size:  0;
        /*  Configure  animations  */
        -webkit-transition-property:  -webkit-transform;
        -moz-transition-property:  -moz-transform;
        -ms-transition-property:  -ms-transform;
        -o-transition-property:  -o-transform;
        transition-property:  transform;
        /*  iOS  like  slide  timings  */
        -webkit-transition-timing-function:  cubic-bezier(0.33,  0.66,  0.66,  1);
        -moz-transition-timing-function:  cubic-bezier(0.33,  0.66,  0.66,  1);
        -ms-transition-timing-function:  cubic-bezier(0.33,  0.66,  0.66,  1);
        -o-transition-timing-function:  cubic-bezier(0.33,  0.66,  0.66,  1);
        transition-timing-function:  cubic-bezier(0.33,  0.66,  0.66,  1);
        -webkit-transition-duration:  0.5s;
        -moz-transition-duration:  0.5s;
        -ms-transition-duration:  0.5s;
        -o-transition-duration:  0.5s;
        transition-duration:  0.5s;
        * {
            display:  inline-block;
            vertical-align:  top;
            white-space:  normal;
        }
    }
    .arrows {
        .arrow {
            position: absolute;
            width: 40px;
            height: 40px;
            background: radial-gradient($purp, darken($purp,10%));
            color: white;
            vertical-align: middle;
            line-height: 40px;
            font-weight: bold;
            z-index: 9999;
            text-align: center;
            font-size: 24px;
            @include backface-visibility(hidden);
            @include transform(translateZ(0));
            @include transform(translate3d(0,0,0));
            @include transform-style(preserve-3d);
            &.left {
                left: 25px;
                top: 50%;
                @include transform(translate(-100px,-20px));
                @include transition(transform 0.3s $authenticMotion);
            }
            &.right {
                right: 25px;
                top: 50%;
                @include transform(translate(100px,-20px));
                @include transition(transform 0.3s $authenticMotion);
            }
        }
        &.in {
            .arrow {
                &.left, &.right {
                    @include transform(translate(0,0));
                    @include transition(transform 0.3s $authenticMotion);
                }
                &:hover {
                    cursor: pointer;
                    &.left {
                        @include transform(translate(-10px,-20px));
                        @include transition(transform 0.3s $authenticMotion);
                    }
                    &.right {
                        @include transform(translate(10px,-20px));
                        @include transition(transform 0.3s $authenticMotion);
                    }
                }
            }
        }
    }
}
.m-scooch-controls {
    text-align: center;
    width: 300px;
    margin: 50px auto 0;
    a {
        display: inline-block;
        width: 15px;
        height: 15px;
        border: 1px solid $mint;
        background: none;
        @include border-top-radius(50%);
        @include border-bottom-radius(50%);
        margin: 0 1px;
        &.m-active {
            background: $mint;
        }
    }
}
.m-center:not(.m-fluid)  >  .m-scooch-inner  {
    display:  inline-block;
    margin-right:  -20000px  !important;
    margin-left:  0  !important; 
    *  {
        position:  relative;
        left:  -20000px;
        &:first-child  {
            float:  left;
            margin-right:  20000px;
            left:  0;  
        }
        &:first-child:last-child  {
            margin-right:  0;  
        }
        &:last-child  {
            margin-right:  -30000px;  
        }
    } 
}